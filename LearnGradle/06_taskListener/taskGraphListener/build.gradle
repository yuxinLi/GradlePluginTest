
version = new ProjectVersion(0 , 1)

class ProjectVersion{
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor){
        this.major=major
        this.minor=minor
        this.release=Boolean.FALSE
    }


    ProjectVersion(Integer major, Integer minor, Boolean release){
        this.major=major
        this.minor=minor
        this.release=release
    }


    @Override
    public String toString() {
        "$major.$minor${release?'':'-SNAPSHOT'}"
    }
}

task printVersion << {
    logger.quiet "Version : $version"
}


ext.versionFile = file('version.properties')

task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion(){
    logger.quiet ' reading version file'

    if (!versionFile.exists()){
        throw new GradleException("version file dose not exist : ${versionFile.canonicalPath}")
    }

    Properties props = new Properties()
    versionFile.withInputStream {
        stream ->
            props.load(stream)
    }

    new ProjectVersion(props.major.toInteger()
    , props.minor.toInteger() , props.release.toBoolean())

}

task makeReleaseVersion(group : "versioning" , description:"Makes project a release version") {

    inputs.property('release' , version.release)
    outputs.file versionFile

    doLast {
        version.release = true
        ant.propertyfile(file: versionFile){
            entry(key:'release' , type: 'string', operation:"=" , value :'true')
        }
    }

}


task releaseProject << {
    logger.quiet " release project"
}

class RListener implements TaskExecutionGraphListener {
    final static String releaseTaskPath = ":releaseProject"

    @Override
    void graphPopulated(TaskExecutionGraph taskGraph){
        if (taskGraph.hasTask(releaseTaskPath)){
            List<Task> allTasks = taskGraph.allTasks
            Task releaseTask = allTasks.find {it.path == releaseTaskPath}
            Project project = releaseTask.project

            if (!project.version.release){
                project.version.release = true
                project.ant.propertyfile(file: project.versionFile) {
                    entry(key: 'release', type: 'string', operation: '=', value: 'true')
                }
            }
        }
    }

}

gradle.taskGraph.addTaskExecutionGraphListener(new RListener())




